name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'  

      - uses: actions/cache@v3
        with:
          path: |
            venv
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install Playwright browsers + Ubuntu system deps for headless CI
          python -m pip install playwright
          playwright install --with-deps

      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          source venv/bin/activate
          # unit
          pytest tests/unit/ --junitxml=test-results/unit.xml
          # integration
          pytest tests/integration/ --junitxml=test-results/integration.xml
          # e2e (Playwright)
          pytest tests/e2e/ --junitxml=test-results/e2e.xml

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build image for Trivy scan
        run: docker build -t app:test .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: app:test
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          scan-type: image
          vuln-type: os,library
          version: v0.67.2         # bump Trivy to the latest noted by their own notice
          args: --scanners vuln    # (optional) faster: disable secret scanning

  deploy:
    needs: security
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            yugpatil/601_module8:latest
            yugpatil/601_module8:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=yugpatil/601_module8:cache
          cache-to: type=inline,mode=max